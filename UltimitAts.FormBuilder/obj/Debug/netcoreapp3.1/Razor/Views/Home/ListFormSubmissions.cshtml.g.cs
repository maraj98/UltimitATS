#pragma checksum "C:\Users\User1\Desktop\Form-Builder---Asp.net-core-master\UltimitAts.FormBuilder\Views\Home\ListFormSubmissions.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3b111ccf7847e3f8536e990752193a2b032f7227"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_ListFormSubmissions), @"mvc.1.0.view", @"/Views/Home/ListFormSubmissions.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\User1\Desktop\Form-Builder---Asp.net-core-master\UltimitAts.FormBuilder\Views\_ViewImports.cshtml"
using Form_Builder;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User1\Desktop\Form-Builder---Asp.net-core-master\UltimitAts.FormBuilder\Views\_ViewImports.cshtml"
using Form_Builder.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3b111ccf7847e3f8536e990752193a2b032f7227", @"/Views/Home/ListFormSubmissions.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fef473ca3b6a2937ac3022d62b0ef0aafc0c840c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_ListFormSubmissions : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Form_Builder.ViewModels.FormDetails>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 3 "C:\Users\User1\Desktop\Form-Builder---Asp.net-core-master\UltimitAts.FormBuilder\Views\Home\ListFormSubmissions.cshtml"
  
    ViewData["Title"] = "Form Submissions";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>List Of Form Submissions</h1>

<div class=""dx-viewport demo-container"">
    <div id=""grid-container""></div>
    <div class=""options"">
        <button id=""show-on-map-btn"" class=""hidden btn btn-primary"">SHow selected rows' locations on map</button>
    </div>
</div>

<script>
    jQuery($ => {
        // get the form info 
        var form = ");
#nullable restore
#line 20 "C:\Users\User1\Desktop\Form-Builder---Asp.net-core-master\UltimitAts.FormBuilder\Views\Home\ListFormSubmissions.cshtml"
              Write(Html.Raw(Model.Form.FormContent));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\n        // get the submissions of the form\n        var submissions = ");
#nullable restore
#line 22 "C:\Users\User1\Desktop\Form-Builder---Asp.net-core-master\UltimitAts.FormBuilder\Views\Home\ListFormSubmissions.cshtml"
                     Write(Html.Raw(Json.Serialize(Model.Submissions)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        // array of data: contains the submitted values
        var arrayOfData = [];
        // names of the columns of the form
        var columns = [];
        // boolean to check if the form has a location list
        var hasLocationList = false
        // locations selected in all submissions
        var locationListDataFields = []

        // get the names of the columns and check if the form has a locationList
        form.forEach(field => {
            if (!(field.type === 'button')) {
                var obj = {};
                obj[""dataField""] = field.label
                columns.push(obj)
                if (field.type === 'locationList') {
                    hasLocationList = true
                    locationListDataFields.push(field.label)
                }
            }
        })

        // get the values of the submissions of the forms
        for (let i = 0; i < submissions.length; i++) {
            var submissionData = JSON.parse(submissions[i].submissionData)
            var obj =");
            WriteLiteral(@" {};
            let j = 0
            submissionData.forEach(field => {
                obj[columns[j++].dataField] = field.value
            })

            arrayOfData.push(obj)
        }

        // create the DevExtreme data grid
        var dataGrid = $(""#grid-container"").dxDataGrid({
            paging: {
                pageSize: 10
            },
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true
            },
            selection: {
                mode: 'multiple',
                showCheckBoxesMode: hasLocationList ? 'always' : 'none',
                allowSelectAll: true
            },
            dataSource: arrayOfData,
            showColumnLines: true,
            showRowLines: true,
            rowAlternationEnabled: true,
            showBorders: true,
            columns: columns
        }).dxDataGrid(""instance"");

        // show the ""show on map"" button if the form has location list input
        if (hasLocationList) {
            $('");
            WriteLiteral(@"#show-on-map-btn').removeClass('hidden')
        }

        // requesting to show the submited locations on the map
        $('#show-on-map-btn').click(() => {
            var selectedLocations = [];
            // get the locations from the selected rows
            dataGrid.getSelectedRowsData().forEach(row => {
                locationListDataFields.forEach(field => {
                    selectedLocations.push(row[field]);
                })
            });
            // do a post request to open a pop-up with the map
            $.ajax({
                url: '");
#nullable restore
#line 95 "C:\Users\User1\Desktop\Form-Builder---Asp.net-core-master\UltimitAts.FormBuilder\Views\Home\ListFormSubmissions.cshtml"
                 Write(Url.Action("ShowPointsOnMap"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                type: 'POST',
                data: { selectedLocations },
                    success: function (response) {
                        if (response) {
                            let newWin = window.open('about:blank', 'map', 'width=900,height=900')
                            let html = response;
                            newWin.document.write(html);
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Something went wrong, please try again!',
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Something went wrong, please try again!',
                ");
            WriteLiteral("        });\n                    }\n                });\n        });\n\n    })\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Form_Builder.ViewModels.FormDetails> Html { get; private set; }
    }
}
#pragma warning restore 1591
